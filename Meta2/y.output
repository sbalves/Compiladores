Terminals which are not used

   RESERVED


State 95 conflicts: 13 shift/reduce
State 106 conflicts: 13 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations

    2 Declarations: Declarations VarDeclaration SEMICOLON
    3             | Declarations FuncDeclaration SEMICOLON
    4             | /* empty */

    5 VarDeclaration: VAR VarSpec
    6               | VAR LPAR VarSpec SEMICOLON RPAR

    7 VarSpec: ID VarSpecList Type

    8 VarSpecList: VarSpecList COMMA ID
    9            | /* empty */

   10 Type: INT
   11     | FLOAT32
   12     | BOOL
   13     | STRING

   14 FuncDeclaration: FUNC ID LPAR ParametersOrNull RPAR TypeOrNull FuncBody

   15 TypeOrNull: Type
   16           | /* empty */

   17 Parameters: ID Type ParametersList

   18 ParametersList: ParametersList COMMA ID Type
   19               | /* empty */

   20 ParametersOrNull: Parameters
   21                 | /* empty */

   22 FuncBody: LBRACE VarsAndStatements RBRACE

   23 VarsAndStatements: VarsAndStatements VarsAndStatementsList SEMICOLON
   24                  | /* empty */

   25 VarsAndStatementsList: VarDeclaration
   26                      | Statement
   27                      | /* empty */

   28 Statement: ID ASSIGN Expr
   29          | LBRACE StatementList1 RBRACE
   30          | IF Expr LBRACE StatementList1 RBRACE StatementList
   31          | FOR ExprOrNull LBRACE StatementList1 RBRACE
   32          | RETURN ExprOrNull
   33          | FuncInvocation
   34          | ParseArgs
   35          | PRINT LPAR ExprOrStril RPAR

   36 ExprOrStril: Expr
   37            | STRLIT

   38 StatementList: ELSE LBRACE StatementList1 RBRACE
   39              | /* empty */

   40 StatementList1: StatementList1 Statement SEMICOLON
   41               | /* empty */

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

   43 FuncInvocation: ID LPAR FuncInvocationList RPAR

   44 FuncInvocationList: Expr CommaExpressionList
   45                   | /* empty */

   46 CommaExpressionList: CommaExpressionList COMMA Expr
   47                    | /* empty */

   48 Expr: Expr Operators Expr
   49     | NotMinusPlus Expr
   50     | INTLIT
   51     | REALLIT
   52     | ID
   53     | FuncInvocation
   54     | LPAR Expr RPAR

   55 NotMinusPlus: NOT
   56             | MINUS
   57             | PLUS

   58 Operators: LT
   59          | GT
   60          | EQ
   61          | NE
   62          | LE
   63          | GE
   64          | OR
   65          | AND
   66          | PLUS
   67          | MINUS
   68          | STAR
   69          | DIV
   70          | MOD

   71 ExprOrNull: Expr
   72           | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 1 7 8 14 17 18 28 42 43 52
STRLIT (259) 37
INTLIT (260) 50
REALLIT (261) 51
SEMICOLON (262) 1 2 3 6 23 40
COMMA (263) 8 18 42 46
BLANKID (264) 42
ASSIGN (265) 28 42
STAR (266) 68
DIV (267) 69
MINUS (268) 56 67
PLUS (269) 57 66
MOD (270) 70
EQ (271) 60
GE (272) 63
GT (273) 59
LE (274) 62
LT (275) 58
NE (276) 61
LBRACE (277) 22 29 30 31 38
RBRACE (278) 22 29 30 31 38
LPAR (279) 6 14 35 42 43 54
RPAR (280) 6 14 35 42 43 54
LSQ (281) 42
RSQ (282) 42
NOT (283) 55
AND (284) 65
OR (285) 64
PACKAGE (286) 1
RETURN (287) 32
PRINT (288) 35
PARSEINT (289) 42
FUNC (290) 14
CMDARGS (291) 42
VAR (292) 5 6
IF (293) 30
ELSE (294) 38
FOR (295) 31
INT (296) 10
FLOAT32 (297) 11
BOOL (298) 12
STRING (299) 13
RESERVED (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
Program (47)
    on left: 1, on right: 0
Declarations (48)
    on left: 2 3 4, on right: 1 2 3
VarDeclaration (49)
    on left: 5 6, on right: 2 25
VarSpec (50)
    on left: 7, on right: 5 6
VarSpecList (51)
    on left: 8 9, on right: 7 8
Type (52)
    on left: 10 11 12 13, on right: 7 15 17 18
FuncDeclaration (53)
    on left: 14, on right: 3
TypeOrNull (54)
    on left: 15 16, on right: 14
Parameters (55)
    on left: 17, on right: 20
ParametersList (56)
    on left: 18 19, on right: 17 18
ParametersOrNull (57)
    on left: 20 21, on right: 14
FuncBody (58)
    on left: 22, on right: 14
VarsAndStatements (59)
    on left: 23 24, on right: 22 23
VarsAndStatementsList (60)
    on left: 25 26 27, on right: 23
Statement (61)
    on left: 28 29 30 31 32 33 34 35, on right: 26 40
ExprOrStril (62)
    on left: 36 37, on right: 35
StatementList (63)
    on left: 38 39, on right: 30
StatementList1 (64)
    on left: 40 41, on right: 29 30 31 38 40
ParseArgs (65)
    on left: 42, on right: 34
FuncInvocation (66)
    on left: 43, on right: 33 53
FuncInvocationList (67)
    on left: 44 45, on right: 43
CommaExpressionList (68)
    on left: 46 47, on right: 44 46
Expr (69)
    on left: 48 49 50 51 52 53 54, on right: 28 30 36 42 44 46 48 49
    54 71
NotMinusPlus (70)
    on left: 55 56 57, on right: 49
Operators (71)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70,
    on right: 48
ExprOrNull (72)
    on left: 71 72, on right: 31 32


state 0

    0 $accept: . Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


state 1

    1 Program: PACKAGE . ID SEMICOLON Declarations

    ID  shift, and go to state 3


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


state 3

    1 Program: PACKAGE ID . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 5


state 4

    0 $accept: Program $end .

    $default  accept


state 5

    1 Program: PACKAGE ID SEMICOLON . Declarations

    $default  reduce using rule 4 (Declarations)

    Declarations  go to state 6


state 6

    1 Program: PACKAGE ID SEMICOLON Declarations .
    2 Declarations: Declarations . VarDeclaration SEMICOLON
    3             | Declarations . FuncDeclaration SEMICOLON

    FUNC  shift, and go to state 7
    VAR   shift, and go to state 8

    $default  reduce using rule 1 (Program)

    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


state 7

   14 FuncDeclaration: FUNC . ID LPAR ParametersOrNull RPAR TypeOrNull FuncBody

    ID  shift, and go to state 11


state 8

    5 VarDeclaration: VAR . VarSpec
    6               | VAR . LPAR VarSpec SEMICOLON RPAR

    ID    shift, and go to state 12
    LPAR  shift, and go to state 13

    VarSpec  go to state 14


state 9

    2 Declarations: Declarations VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 15


state 10

    3 Declarations: Declarations FuncDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 16


state 11

   14 FuncDeclaration: FUNC ID . LPAR ParametersOrNull RPAR TypeOrNull FuncBody

    LPAR  shift, and go to state 17


state 12

    7 VarSpec: ID . VarSpecList Type

    $default  reduce using rule 9 (VarSpecList)

    VarSpecList  go to state 18


state 13

    6 VarDeclaration: VAR LPAR . VarSpec SEMICOLON RPAR

    ID  shift, and go to state 12

    VarSpec  go to state 19


state 14

    5 VarDeclaration: VAR VarSpec .

    $default  reduce using rule 5 (VarDeclaration)


state 15

    2 Declarations: Declarations VarDeclaration SEMICOLON .

    $default  reduce using rule 2 (Declarations)


state 16

    3 Declarations: Declarations FuncDeclaration SEMICOLON .

    $default  reduce using rule 3 (Declarations)


state 17

   14 FuncDeclaration: FUNC ID LPAR . ParametersOrNull RPAR TypeOrNull FuncBody

    ID  shift, and go to state 20

    $default  reduce using rule 21 (ParametersOrNull)

    Parameters        go to state 21
    ParametersOrNull  go to state 22


state 18

    7 VarSpec: ID VarSpecList . Type
    8 VarSpecList: VarSpecList . COMMA ID

    COMMA    shift, and go to state 23
    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 28


state 19

    6 VarDeclaration: VAR LPAR VarSpec . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 29


state 20

   17 Parameters: ID . Type ParametersList

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 30


state 21

   20 ParametersOrNull: Parameters .

    $default  reduce using rule 20 (ParametersOrNull)


state 22

   14 FuncDeclaration: FUNC ID LPAR ParametersOrNull . RPAR TypeOrNull FuncBody

    RPAR  shift, and go to state 31


state 23

    8 VarSpecList: VarSpecList COMMA . ID

    ID  shift, and go to state 32


state 24

   10 Type: INT .

    $default  reduce using rule 10 (Type)


state 25

   11 Type: FLOAT32 .

    $default  reduce using rule 11 (Type)


state 26

   12 Type: BOOL .

    $default  reduce using rule 12 (Type)


state 27

   13 Type: STRING .

    $default  reduce using rule 13 (Type)


state 28

    7 VarSpec: ID VarSpecList Type .

    $default  reduce using rule 7 (VarSpec)


state 29

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON . RPAR

    RPAR  shift, and go to state 33


state 30

   17 Parameters: ID Type . ParametersList

    $default  reduce using rule 19 (ParametersList)

    ParametersList  go to state 34


state 31

   14 FuncDeclaration: FUNC ID LPAR ParametersOrNull RPAR . TypeOrNull FuncBody

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    $default  reduce using rule 16 (TypeOrNull)

    Type        go to state 35
    TypeOrNull  go to state 36


state 32

    8 VarSpecList: VarSpecList COMMA ID .

    $default  reduce using rule 8 (VarSpecList)


state 33

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR .

    $default  reduce using rule 6 (VarDeclaration)


state 34

   17 Parameters: ID Type ParametersList .
   18 ParametersList: ParametersList . COMMA ID Type

    COMMA  shift, and go to state 37

    $default  reduce using rule 17 (Parameters)


state 35

   15 TypeOrNull: Type .

    $default  reduce using rule 15 (TypeOrNull)


state 36

   14 FuncDeclaration: FUNC ID LPAR ParametersOrNull RPAR TypeOrNull . FuncBody

    LBRACE  shift, and go to state 38

    FuncBody  go to state 39


state 37

   18 ParametersList: ParametersList COMMA . ID Type

    ID  shift, and go to state 40


state 38

   22 FuncBody: LBRACE . VarsAndStatements RBRACE

    $default  reduce using rule 24 (VarsAndStatements)

    VarsAndStatements  go to state 41


state 39

   14 FuncDeclaration: FUNC ID LPAR ParametersOrNull RPAR TypeOrNull FuncBody .

    $default  reduce using rule 14 (FuncDeclaration)


state 40

   18 ParametersList: ParametersList COMMA ID . Type

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 42


state 41

   22 FuncBody: LBRACE VarsAndStatements . RBRACE
   23 VarsAndStatements: VarsAndStatements . VarsAndStatementsList SEMICOLON

    ID      shift, and go to state 43
    LBRACE  shift, and go to state 44
    RBRACE  shift, and go to state 45
    RETURN  shift, and go to state 46
    PRINT   shift, and go to state 47
    VAR     shift, and go to state 8
    IF      shift, and go to state 48
    FOR     shift, and go to state 49

    $default  reduce using rule 27 (VarsAndStatementsList)

    VarDeclaration         go to state 50
    VarsAndStatementsList  go to state 51
    Statement              go to state 52
    ParseArgs              go to state 53
    FuncInvocation         go to state 54


state 42

   18 ParametersList: ParametersList COMMA ID Type .

    $default  reduce using rule 18 (ParametersList)


state 43

   28 Statement: ID . ASSIGN Expr
   42 ParseArgs: ID . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43 FuncInvocation: ID . LPAR FuncInvocationList RPAR

    COMMA   shift, and go to state 55
    ASSIGN  shift, and go to state 56
    LPAR    shift, and go to state 57


state 44

   29 Statement: LBRACE . StatementList1 RBRACE

    $default  reduce using rule 41 (StatementList1)

    StatementList1  go to state 58


state 45

   22 FuncBody: LBRACE VarsAndStatements RBRACE .

    $default  reduce using rule 22 (FuncBody)


state 46

   32 Statement: RETURN . ExprOrNull

    ID       shift, and go to state 59
    INTLIT   shift, and go to state 60
    REALLIT  shift, and go to state 61
    MINUS    shift, and go to state 62
    PLUS     shift, and go to state 63
    LPAR     shift, and go to state 64
    NOT      shift, and go to state 65

    $default  reduce using rule 72 (ExprOrNull)

    FuncInvocation  go to state 66
    Expr            go to state 67
    NotMinusPlus    go to state 68
    ExprOrNull      go to state 69


state 47

   35 Statement: PRINT . LPAR ExprOrStril RPAR

    LPAR  shift, and go to state 70


state 48

   30 Statement: IF . Expr LBRACE StatementList1 RBRACE StatementList

    ID       shift, and go to state 59
    INTLIT   shift, and go to state 60
    REALLIT  shift, and go to state 61
    MINUS    shift, and go to state 62
    PLUS     shift, and go to state 63
    LPAR     shift, and go to state 64
    NOT      shift, and go to state 65

    FuncInvocation  go to state 66
    Expr            go to state 71
    NotMinusPlus    go to state 68


state 49

   31 Statement: FOR . ExprOrNull LBRACE StatementList1 RBRACE

    ID       shift, and go to state 59
    INTLIT   shift, and go to state 60
    REALLIT  shift, and go to state 61
    MINUS    shift, and go to state 62
    PLUS     shift, and go to state 63
    LPAR     shift, and go to state 64
    NOT      shift, and go to state 65

    $default  reduce using rule 72 (ExprOrNull)

    FuncInvocation  go to state 66
    Expr            go to state 67
    NotMinusPlus    go to state 68
    ExprOrNull      go to state 72


state 50

   25 VarsAndStatementsList: VarDeclaration .

    $default  reduce using rule 25 (VarsAndStatementsList)


state 51

   23 VarsAndStatements: VarsAndStatements VarsAndStatementsList . SEMICOLON

    SEMICOLON  shift, and go to state 73


state 52

   26 VarsAndStatementsList: Statement .

    $default  reduce using rule 26 (VarsAndStatementsList)


state 53

   34 Statement: ParseArgs .

    $default  reduce using rule 34 (Statement)


state 54

   33 Statement: FuncInvocation .

    $default  reduce using rule 33 (Statement)


state 55

   42 ParseArgs: ID COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    BLANKID  shift, and go to state 74


state 56

   28 Statement: ID ASSIGN . Expr

    ID       shift, and go to state 59
    INTLIT   shift, and go to state 60
    REALLIT  shift, and go to state 61
    MINUS    shift, and go to state 62
    PLUS     shift, and go to state 63
    LPAR     shift, and go to state 64
    NOT      shift, and go to state 65

    FuncInvocation  go to state 66
    Expr            go to state 75
    NotMinusPlus    go to state 68


state 57

   43 FuncInvocation: ID LPAR . FuncInvocationList RPAR

    ID       shift, and go to state 59
    INTLIT   shift, and go to state 60
    REALLIT  shift, and go to state 61
    MINUS    shift, and go to state 62
    PLUS     shift, and go to state 63
    LPAR     shift, and go to state 64
    NOT      shift, and go to state 65

    $default  reduce using rule 45 (FuncInvocationList)

    FuncInvocation      go to state 66
    FuncInvocationList  go to state 76
    Expr                go to state 77
    NotMinusPlus        go to state 68


state 58

   29 Statement: LBRACE StatementList1 . RBRACE
   40 StatementList1: StatementList1 . Statement SEMICOLON

    ID      shift, and go to state 43
    LBRACE  shift, and go to state 44
    RBRACE  shift, and go to state 78
    RETURN  shift, and go to state 46
    PRINT   shift, and go to state 47
    IF      shift, and go to state 48
    FOR     shift, and go to state 49

    Statement       go to state 79
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


state 59

   43 FuncInvocation: ID . LPAR FuncInvocationList RPAR
   52 Expr: ID .

    LPAR  shift, and go to state 57

    $default  reduce using rule 52 (Expr)


state 60

   50 Expr: INTLIT .

    $default  reduce using rule 50 (Expr)


state 61

   51 Expr: REALLIT .

    $default  reduce using rule 51 (Expr)


state 62

   56 NotMinusPlus: MINUS .

    $default  reduce using rule 56 (NotMinusPlus)


state 63

   57 NotMinusPlus: PLUS .

    $default  reduce using rule 57 (NotMinusPlus)


state 64

   54 Expr: LPAR . Expr RPAR

    ID       shift, and go to state 59
    INTLIT   shift, and go to state 60
    REALLIT  shift, and go to state 61
    MINUS    shift, and go to state 62
    PLUS     shift, and go to state 63
    LPAR     shift, and go to state 64
    NOT      shift, and go to state 65

    FuncInvocation  go to state 66
    Expr            go to state 80
    NotMinusPlus    go to state 68


state 65

   55 NotMinusPlus: NOT .

    $default  reduce using rule 55 (NotMinusPlus)


state 66

   53 Expr: FuncInvocation .

    $default  reduce using rule 53 (Expr)


state 67

   48 Expr: Expr . Operators Expr
   71 ExprOrNull: Expr .

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 85
    EQ     shift, and go to state 86
    GE     shift, and go to state 87
    GT     shift, and go to state 88
    LE     shift, and go to state 89
    LT     shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    $default  reduce using rule 71 (ExprOrNull)

    Operators  go to state 94


state 68

   49 Expr: NotMinusPlus . Expr

    ID       shift, and go to state 59
    INTLIT   shift, and go to state 60
    REALLIT  shift, and go to state 61
    MINUS    shift, and go to state 62
    PLUS     shift, and go to state 63
    LPAR     shift, and go to state 64
    NOT      shift, and go to state 65

    FuncInvocation  go to state 66
    Expr            go to state 95
    NotMinusPlus    go to state 68


state 69

   32 Statement: RETURN ExprOrNull .

    $default  reduce using rule 32 (Statement)


state 70

   35 Statement: PRINT LPAR . ExprOrStril RPAR

    ID       shift, and go to state 59
    STRLIT   shift, and go to state 96
    INTLIT   shift, and go to state 60
    REALLIT  shift, and go to state 61
    MINUS    shift, and go to state 62
    PLUS     shift, and go to state 63
    LPAR     shift, and go to state 64
    NOT      shift, and go to state 65

    ExprOrStril     go to state 97
    FuncInvocation  go to state 66
    Expr            go to state 98
    NotMinusPlus    go to state 68


state 71

   30 Statement: IF Expr . LBRACE StatementList1 RBRACE StatementList
   48 Expr: Expr . Operators Expr

    STAR    shift, and go to state 81
    DIV     shift, and go to state 82
    MINUS   shift, and go to state 83
    PLUS    shift, and go to state 84
    MOD     shift, and go to state 85
    EQ      shift, and go to state 86
    GE      shift, and go to state 87
    GT      shift, and go to state 88
    LE      shift, and go to state 89
    LT      shift, and go to state 90
    NE      shift, and go to state 91
    LBRACE  shift, and go to state 99
    AND     shift, and go to state 92
    OR      shift, and go to state 93

    Operators  go to state 94


state 72

   31 Statement: FOR ExprOrNull . LBRACE StatementList1 RBRACE

    LBRACE  shift, and go to state 100


state 73

   23 VarsAndStatements: VarsAndStatements VarsAndStatementsList SEMICOLON .

    $default  reduce using rule 23 (VarsAndStatements)


state 74

   42 ParseArgs: ID COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    ASSIGN  shift, and go to state 101


state 75

   28 Statement: ID ASSIGN Expr .
   48 Expr: Expr . Operators Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 85
    EQ     shift, and go to state 86
    GE     shift, and go to state 87
    GT     shift, and go to state 88
    LE     shift, and go to state 89
    LT     shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    $default  reduce using rule 28 (Statement)

    Operators  go to state 94


state 76

   43 FuncInvocation: ID LPAR FuncInvocationList . RPAR

    RPAR  shift, and go to state 102


state 77

   44 FuncInvocationList: Expr . CommaExpressionList
   48 Expr: Expr . Operators Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 85
    EQ     shift, and go to state 86
    GE     shift, and go to state 87
    GT     shift, and go to state 88
    LE     shift, and go to state 89
    LT     shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    $default  reduce using rule 47 (CommaExpressionList)

    CommaExpressionList  go to state 103
    Operators            go to state 94


state 78

   29 Statement: LBRACE StatementList1 RBRACE .

    $default  reduce using rule 29 (Statement)


state 79

   40 StatementList1: StatementList1 Statement . SEMICOLON

    SEMICOLON  shift, and go to state 104


state 80

   48 Expr: Expr . Operators Expr
   54     | LPAR Expr . RPAR

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 85
    EQ     shift, and go to state 86
    GE     shift, and go to state 87
    GT     shift, and go to state 88
    LE     shift, and go to state 89
    LT     shift, and go to state 90
    NE     shift, and go to state 91
    RPAR   shift, and go to state 105
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    Operators  go to state 94


state 81

   68 Operators: STAR .

    $default  reduce using rule 68 (Operators)


state 82

   69 Operators: DIV .

    $default  reduce using rule 69 (Operators)


state 83

   67 Operators: MINUS .

    $default  reduce using rule 67 (Operators)


state 84

   66 Operators: PLUS .

    $default  reduce using rule 66 (Operators)


state 85

   70 Operators: MOD .

    $default  reduce using rule 70 (Operators)


state 86

   60 Operators: EQ .

    $default  reduce using rule 60 (Operators)


state 87

   63 Operators: GE .

    $default  reduce using rule 63 (Operators)


state 88

   59 Operators: GT .

    $default  reduce using rule 59 (Operators)


state 89

   62 Operators: LE .

    $default  reduce using rule 62 (Operators)


state 90

   58 Operators: LT .

    $default  reduce using rule 58 (Operators)


state 91

   61 Operators: NE .

    $default  reduce using rule 61 (Operators)


state 92

   65 Operators: AND .

    $default  reduce using rule 65 (Operators)


state 93

   64 Operators: OR .

    $default  reduce using rule 64 (Operators)


state 94

   48 Expr: Expr Operators . Expr

    ID       shift, and go to state 59
    INTLIT   shift, and go to state 60
    REALLIT  shift, and go to state 61
    MINUS    shift, and go to state 62
    PLUS     shift, and go to state 63
    LPAR     shift, and go to state 64
    NOT      shift, and go to state 65

    FuncInvocation  go to state 66
    Expr            go to state 106
    NotMinusPlus    go to state 68


state 95

   48 Expr: Expr . Operators Expr
   49     | NotMinusPlus Expr .

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 85
    EQ     shift, and go to state 86
    GE     shift, and go to state 87
    GT     shift, and go to state 88
    LE     shift, and go to state 89
    LT     shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    STAR      [reduce using rule 49 (Expr)]
    DIV       [reduce using rule 49 (Expr)]
    MINUS     [reduce using rule 49 (Expr)]
    PLUS      [reduce using rule 49 (Expr)]
    MOD       [reduce using rule 49 (Expr)]
    EQ        [reduce using rule 49 (Expr)]
    GE        [reduce using rule 49 (Expr)]
    GT        [reduce using rule 49 (Expr)]
    LE        [reduce using rule 49 (Expr)]
    LT        [reduce using rule 49 (Expr)]
    NE        [reduce using rule 49 (Expr)]
    AND       [reduce using rule 49 (Expr)]
    OR        [reduce using rule 49 (Expr)]
    $default  reduce using rule 49 (Expr)

    Operators  go to state 94


state 96

   37 ExprOrStril: STRLIT .

    $default  reduce using rule 37 (ExprOrStril)


state 97

   35 Statement: PRINT LPAR ExprOrStril . RPAR

    RPAR  shift, and go to state 107


state 98

   36 ExprOrStril: Expr .
   48 Expr: Expr . Operators Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 85
    EQ     shift, and go to state 86
    GE     shift, and go to state 87
    GT     shift, and go to state 88
    LE     shift, and go to state 89
    LT     shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    $default  reduce using rule 36 (ExprOrStril)

    Operators  go to state 94


state 99

   30 Statement: IF Expr LBRACE . StatementList1 RBRACE StatementList

    $default  reduce using rule 41 (StatementList1)

    StatementList1  go to state 108


state 100

   31 Statement: FOR ExprOrNull LBRACE . StatementList1 RBRACE

    $default  reduce using rule 41 (StatementList1)

    StatementList1  go to state 109


state 101

   42 ParseArgs: ID COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    PARSEINT  shift, and go to state 110


state 102

   43 FuncInvocation: ID LPAR FuncInvocationList RPAR .

    $default  reduce using rule 43 (FuncInvocation)


state 103

   44 FuncInvocationList: Expr CommaExpressionList .
   46 CommaExpressionList: CommaExpressionList . COMMA Expr

    COMMA  shift, and go to state 111

    $default  reduce using rule 44 (FuncInvocationList)


state 104

   40 StatementList1: StatementList1 Statement SEMICOLON .

    $default  reduce using rule 40 (StatementList1)


state 105

   54 Expr: LPAR Expr RPAR .

    $default  reduce using rule 54 (Expr)


state 106

   48 Expr: Expr . Operators Expr
   48     | Expr Operators Expr .

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 85
    EQ     shift, and go to state 86
    GE     shift, and go to state 87
    GT     shift, and go to state 88
    LE     shift, and go to state 89
    LT     shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    STAR      [reduce using rule 48 (Expr)]
    DIV       [reduce using rule 48 (Expr)]
    MINUS     [reduce using rule 48 (Expr)]
    PLUS      [reduce using rule 48 (Expr)]
    MOD       [reduce using rule 48 (Expr)]
    EQ        [reduce using rule 48 (Expr)]
    GE        [reduce using rule 48 (Expr)]
    GT        [reduce using rule 48 (Expr)]
    LE        [reduce using rule 48 (Expr)]
    LT        [reduce using rule 48 (Expr)]
    NE        [reduce using rule 48 (Expr)]
    AND       [reduce using rule 48 (Expr)]
    OR        [reduce using rule 48 (Expr)]
    $default  reduce using rule 48 (Expr)

    Operators  go to state 94


state 107

   35 Statement: PRINT LPAR ExprOrStril RPAR .

    $default  reduce using rule 35 (Statement)


state 108

   30 Statement: IF Expr LBRACE StatementList1 . RBRACE StatementList
   40 StatementList1: StatementList1 . Statement SEMICOLON

    ID      shift, and go to state 43
    LBRACE  shift, and go to state 44
    RBRACE  shift, and go to state 112
    RETURN  shift, and go to state 46
    PRINT   shift, and go to state 47
    IF      shift, and go to state 48
    FOR     shift, and go to state 49

    Statement       go to state 79
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


state 109

   31 Statement: FOR ExprOrNull LBRACE StatementList1 . RBRACE
   40 StatementList1: StatementList1 . Statement SEMICOLON

    ID      shift, and go to state 43
    LBRACE  shift, and go to state 44
    RBRACE  shift, and go to state 113
    RETURN  shift, and go to state 46
    PRINT   shift, and go to state 47
    IF      shift, and go to state 48
    FOR     shift, and go to state 49

    Statement       go to state 79
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


state 110

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ Expr RSQ RPAR

    LPAR  shift, and go to state 114


state 111

   46 CommaExpressionList: CommaExpressionList COMMA . Expr

    ID       shift, and go to state 59
    INTLIT   shift, and go to state 60
    REALLIT  shift, and go to state 61
    MINUS    shift, and go to state 62
    PLUS     shift, and go to state 63
    LPAR     shift, and go to state 64
    NOT      shift, and go to state 65

    FuncInvocation  go to state 66
    Expr            go to state 115
    NotMinusPlus    go to state 68


state 112

   30 Statement: IF Expr LBRACE StatementList1 RBRACE . StatementList

    ELSE  shift, and go to state 116

    $default  reduce using rule 39 (StatementList)

    StatementList  go to state 117


state 113

   31 Statement: FOR ExprOrNull LBRACE StatementList1 RBRACE .

    $default  reduce using rule 31 (Statement)


state 114

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ Expr RSQ RPAR

    CMDARGS  shift, and go to state 118


state 115

   46 CommaExpressionList: CommaExpressionList COMMA Expr .
   48 Expr: Expr . Operators Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 85
    EQ     shift, and go to state 86
    GE     shift, and go to state 87
    GT     shift, and go to state 88
    LE     shift, and go to state 89
    LT     shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    $default  reduce using rule 46 (CommaExpressionList)

    Operators  go to state 94


state 116

   38 StatementList: ELSE . LBRACE StatementList1 RBRACE

    LBRACE  shift, and go to state 119


state 117

   30 Statement: IF Expr LBRACE StatementList1 RBRACE StatementList .

    $default  reduce using rule 30 (Statement)


state 118

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 120


state 119

   38 StatementList: ELSE LBRACE . StatementList1 RBRACE

    $default  reduce using rule 41 (StatementList1)

    StatementList1  go to state 121


state 120

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . Expr RSQ RPAR

    ID       shift, and go to state 59
    INTLIT   shift, and go to state 60
    REALLIT  shift, and go to state 61
    MINUS    shift, and go to state 62
    PLUS     shift, and go to state 63
    LPAR     shift, and go to state 64
    NOT      shift, and go to state 65

    FuncInvocation  go to state 66
    Expr            go to state 122
    NotMinusPlus    go to state 68


state 121

   38 StatementList: ELSE LBRACE StatementList1 . RBRACE
   40 StatementList1: StatementList1 . Statement SEMICOLON

    ID      shift, and go to state 43
    LBRACE  shift, and go to state 44
    RBRACE  shift, and go to state 123
    RETURN  shift, and go to state 46
    PRINT   shift, and go to state 47
    IF      shift, and go to state 48
    FOR     shift, and go to state 49

    Statement       go to state 79
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


state 122

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr . RSQ RPAR
   48 Expr: Expr . Operators Expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 85
    EQ     shift, and go to state 86
    GE     shift, and go to state 87
    GT     shift, and go to state 88
    LE     shift, and go to state 89
    LT     shift, and go to state 90
    NE     shift, and go to state 91
    RSQ    shift, and go to state 124
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    Operators  go to state 94


state 123

   38 StatementList: ELSE LBRACE StatementList1 RBRACE .

    $default  reduce using rule 38 (StatementList)


state 124

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 125


state 125

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR .

    $default  reduce using rule 42 (ParseArgs)
