Node id: Program
Node id: FuncDecl
Node id: FuncBody
Node id: NULL
Node id: If
its an statement_token If
Node id: Eq
its an relational Eq
Node id: Id
its an id Id
annotating id 
id annotated
Node id: IntLit
its an intlit IntLit
is null
is null
annotating relational_operator
relational_operator annotated
Node id: Block
Node id: Return
Node id: IntLit
its an intlit IntLit
is null
is null
Node id: Block
is null
is null
is null
is null
annotating statement_token
tatement_token annoted
Node id: Return
Node id: Mul
its an arith Mul
Node id: Id
its an id Id
annotating id 
id annotated
Node id: Call
Node id: Id
its an id Id
annotating id 
id annotated
Node id: Sub
its an arith Sub
Node id: Id
its an id Id
annotating id 
id annotated
Node id: IntLit
its an intlit IntLit
is null
is null
annotating arithmetic_operator 
arithmetic_operator annotated
is null
is null
annotating call
call annoted
is null
is null
annotating arithmetic_operator 
arithmetic_operator annotated
is null
is null
is null
is null
is null
Node id: FuncDecl
Node id: FuncBody
Node id: NULL
Node id: VarDecl
Node id: ParseArgs
Node id: Id
its an id Id
annotating id 
id annotated
Node id: IntLit
its an intlit IntLit
is null
is null
annotating parseargs
parseargs annoted
Node id: Print
Node id: Call
Node id: Id
its an id Id
annotating id 
id annotated
Node id: Id
its an id Id
annotating id 
id annotated
is null
is null
annotating call
call annoted
is null
is null
is null
is null
is null
is null
is null
is null
is null
===== Global Symbol Table =====
factorial	(int)	int
main	()	none

===== Function factorial(int) Symbol Table =====
return		int
n		int	param

===== Function main() Symbol Table =====
return		none
argument		int

Program
..FuncDecl
....FuncHeader
......Id(factorial)
......Int
......FuncParams
........ParamDecl
..........Int
..........Id(n)
....FuncBody
......If
........Eq - bool
..........Id(n) - int
..........IntLit(0) - int
........Block
..........Return
............IntLit(1) - int
........Block
......Return
........Mul - int
..........Id(n) - int
..........Call - int
............Id(factorial) - (int)
............Sub - int
..............Id(n) - int
..............IntLit(1) - int
..FuncDecl
....FuncHeader
......Id(main)
......FuncParams
....FuncBody
......VarDecl
........Int
........Id(argument)
......ParseArgs - int
........Id(argument) - int
........IntLit(1) - int
......Print
........Call - int
..........Id(factorial) - (int)
..........Id(argument) - int
