Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations

    2 Declarations: Declarations VarDeclaration SEMICOLON
    3             | Declarations FuncDeclaration SEMICOLON
    4             | %empty

    5 VarDeclaration: VAR VarSpec
    6               | VAR LPAR VarSpec SEMICOLON RPAR

    7 VarSpec: ID VarSpecList Type

    8 VarSpecList: VarSpecList COMMA ID
    9            | %empty

   10 Type: INT
   11     | FLOAT32
   12     | BOOL
   13     | STRING

   14 FuncDeclaration: FUNC ID LPAR ParametersOrNull RPAR TypeOrNull FuncBody

   15 TypeOrNull: Type
   16           | %empty

   17 Parameters: ID Type ParametersList

   18 ParametersList: ParametersList COMMA ID Type
   19               | %empty

   20 ParametersOrNull: Parameters
   21                 | %empty

   22 FuncBody: LBRACE VarsAndStatements RBRACE

   23 VarsAndStatements: VarsAndStatements VarsAndStatementsList SEMICOLON
   24                  | %empty

   25 VarsAndStatementsList: VarDeclaration
   26                      | Statement
   27                      | %empty

   28 Statement: ID ASSIGN Expr
   29          | LBRACE StatementList1 RBRACE
   30          | IF Expr LBRACE StatementList1 RBRACE StatementList
   31          | FOR ExprOrNull LBRACE StatementList1 RBRACE
   32          | RETURN ExprOrNull
   33          | FuncInvocation
   34          | ParseArgs
   35          | PRINT LPAR Expr RPAR
   36          | PRINT LPAR STRLIT RPAR
   37          | error

   38 StatementList: ELSE LBRACE StatementList1 RBRACE
   39              | %empty

   40 StatementList1: StatementList1 Statement SEMICOLON
   41               | %empty

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR

   44 FuncInvocation: ID LPAR FuncInvocationList RPAR
   45               | ID LPAR error RPAR

   46 FuncInvocationList: Expr CommaExpressionList
   47                   | %empty

   48 CommaExpressionList: CommaExpressionList COMMA Expr
   49                    | %empty

   50 Expr: Expr MOD Expr
   51     | Expr LT Expr
   52     | Expr GT Expr
   53     | Expr EQ Expr
   54     | Expr NE Expr
   55     | Expr LE Expr
   56     | Expr GE Expr
   57     | Expr OR Expr
   58     | Expr AND Expr
   59     | Expr PLUS Expr
   60     | Expr MINUS Expr
   61     | Expr STAR Expr
   62     | Expr DIV Expr
   63     | NOT Expr
   64     | MINUS Expr
   65     | PLUS Expr
   66     | INTLIT
   67     | REALLIT
   68     | ID
   69     | FuncInvocation
   70     | LPAR Expr RPAR
   71     | LPAR error RPAR

   72 ExprOrNull: Expr
   73           | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256) 37 43 45 71
    ID <token> (258) 1 7 8 14 17 18 28 42 43 44 45 68
    STRLIT <token> (259) 36
    INTLIT <token> (260) 66
    REALLIT <token> (261) 67
    SEMICOLON <token> (262) 1 2 3 6 23 40
    COMMA <token> (263) 8 18 42 43 48
    BLANKID <token> (264) 42 43
    ASSIGN <token> (265) 28 42 43
    STAR <token> (266) 61
    DIV <token> (267) 62
    MINUS <token> (268) 60 64
    PLUS <token> (269) 59 65
    MOD <token> (270) 50
    EQ <token> (271) 53
    GE <token> (272) 56
    GT <token> (273) 52
    LE <token> (274) 55
    LT <token> (275) 51
    NE <token> (276) 54
    LBRACE <token> (277) 22 29 30 31 38
    RBRACE <token> (278) 22 29 30 31 38
    LPAR <token> (279) 6 14 35 36 42 43 44 45 70 71
    RPAR <token> (280) 6 14 35 36 42 43 44 45 70 71
    LSQ <token> (281) 42
    RSQ <token> (282) 42
    NOT <token> (283) 63
    AND <token> (284) 58
    OR <token> (285) 57
    PACKAGE <token> (286) 1
    RETURN <token> (287) 32
    PRINT <token> (288) 35 36
    PARSEINT <token> (289) 42 43
    FUNC <token> (290) 14
    CMDARGS <token> (291) 42
    VAR <token> (292) 5 6
    IF <token> (293) 30
    ELSE <token> (294) 38
    FOR <token> (295) 31
    INT <token> (296) 10
    FLOAT32 <token> (297) 11
    BOOL <token> (298) 12
    STRING <token> (299) 13
    RESERVED <token> (300)


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    Program <node> (47)
        on left: 1
        on right: 0
    Declarations <node> (48)
        on left: 2 3 4
        on right: 1 2 3
    VarDeclaration <node> (49)
        on left: 5 6
        on right: 2 25
    VarSpec <node> (50)
        on left: 7
        on right: 5 6
    VarSpecList <node> (51)
        on left: 8 9
        on right: 7 8
    Type <node> (52)
        on left: 10 11 12 13
        on right: 7 15 17 18
    FuncDeclaration <node> (53)
        on left: 14
        on right: 3
    TypeOrNull <node> (54)
        on left: 15 16
        on right: 14
    Parameters <node> (55)
        on left: 17
        on right: 20
    ParametersList <node> (56)
        on left: 18 19
        on right: 17 18
    ParametersOrNull <node> (57)
        on left: 20 21
        on right: 14
    FuncBody <node> (58)
        on left: 22
        on right: 14
    VarsAndStatements <node> (59)
        on left: 23 24
        on right: 22 23
    VarsAndStatementsList <node> (60)
        on left: 25 26 27
        on right: 23
    Statement <node> (61)
        on left: 28 29 30 31 32 33 34 35 36 37
        on right: 26 40
    StatementList <node> (62)
        on left: 38 39
        on right: 30
    StatementList1 <node> (63)
        on left: 40 41
        on right: 29 30 31 38 40
    ParseArgs <node> (64)
        on left: 42 43
        on right: 34
    FuncInvocation <node> (65)
        on left: 44 45
        on right: 33 69
    FuncInvocationList <node> (66)
        on left: 46 47
        on right: 44
    CommaExpressionList <node> (67)
        on left: 48 49
        on right: 46 48
    Expr <node> (68)
        on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
        on right: 28 30 35 42 46 48 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 70 72
    ExprOrNull <node> (69)
        on left: 72 73
        on right: 31 32


State 0

    0 $accept: . Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: PACKAGE . ID SEMICOLON Declarations

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: PACKAGE ID . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: PACKAGE ID SEMICOLON . Declarations

    $default  reduce using rule 4 (Declarations)

    Declarations  go to state 6


State 6

    1 Program: PACKAGE ID SEMICOLON Declarations .
    2 Declarations: Declarations . VarDeclaration SEMICOLON
    3             | Declarations . FuncDeclaration SEMICOLON

    FUNC  shift, and go to state 7
    VAR   shift, and go to state 8

    $default  reduce using rule 1 (Program)

    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 7

   14 FuncDeclaration: FUNC . ID LPAR ParametersOrNull RPAR TypeOrNull FuncBody

    ID  shift, and go to state 11


State 8

    5 VarDeclaration: VAR . VarSpec
    6               | VAR . LPAR VarSpec SEMICOLON RPAR

    ID    shift, and go to state 12
    LPAR  shift, and go to state 13

    VarSpec  go to state 14


State 9

    2 Declarations: Declarations VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 15


State 10

    3 Declarations: Declarations FuncDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 16


State 11

   14 FuncDeclaration: FUNC ID . LPAR ParametersOrNull RPAR TypeOrNull FuncBody

    LPAR  shift, and go to state 17


State 12

    7 VarSpec: ID . VarSpecList Type

    $default  reduce using rule 9 (VarSpecList)

    VarSpecList  go to state 18


State 13

    6 VarDeclaration: VAR LPAR . VarSpec SEMICOLON RPAR

    ID  shift, and go to state 12

    VarSpec  go to state 19


State 14

    5 VarDeclaration: VAR VarSpec .

    $default  reduce using rule 5 (VarDeclaration)


State 15

    2 Declarations: Declarations VarDeclaration SEMICOLON .

    $default  reduce using rule 2 (Declarations)


State 16

    3 Declarations: Declarations FuncDeclaration SEMICOLON .

    $default  reduce using rule 3 (Declarations)


State 17

   14 FuncDeclaration: FUNC ID LPAR . ParametersOrNull RPAR TypeOrNull FuncBody

    ID  shift, and go to state 20

    $default  reduce using rule 21 (ParametersOrNull)

    Parameters        go to state 21
    ParametersOrNull  go to state 22


State 18

    7 VarSpec: ID VarSpecList . Type
    8 VarSpecList: VarSpecList . COMMA ID

    COMMA    shift, and go to state 23
    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 28


State 19

    6 VarDeclaration: VAR LPAR VarSpec . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 29


State 20

   17 Parameters: ID . Type ParametersList

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 30


State 21

   20 ParametersOrNull: Parameters .

    $default  reduce using rule 20 (ParametersOrNull)


State 22

   14 FuncDeclaration: FUNC ID LPAR ParametersOrNull . RPAR TypeOrNull FuncBody

    RPAR  shift, and go to state 31


State 23

    8 VarSpecList: VarSpecList COMMA . ID

    ID  shift, and go to state 32


State 24

   10 Type: INT .

    $default  reduce using rule 10 (Type)


State 25

   11 Type: FLOAT32 .

    $default  reduce using rule 11 (Type)


State 26

   12 Type: BOOL .

    $default  reduce using rule 12 (Type)


State 27

   13 Type: STRING .

    $default  reduce using rule 13 (Type)


State 28

    7 VarSpec: ID VarSpecList Type .

    $default  reduce using rule 7 (VarSpec)


State 29

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON . RPAR

    RPAR  shift, and go to state 33


State 30

   17 Parameters: ID Type . ParametersList

    $default  reduce using rule 19 (ParametersList)

    ParametersList  go to state 34


State 31

   14 FuncDeclaration: FUNC ID LPAR ParametersOrNull RPAR . TypeOrNull FuncBody

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    $default  reduce using rule 16 (TypeOrNull)

    Type        go to state 35
    TypeOrNull  go to state 36


State 32

    8 VarSpecList: VarSpecList COMMA ID .

    $default  reduce using rule 8 (VarSpecList)


State 33

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR .

    $default  reduce using rule 6 (VarDeclaration)


State 34

   17 Parameters: ID Type ParametersList .
   18 ParametersList: ParametersList . COMMA ID Type

    COMMA  shift, and go to state 37

    $default  reduce using rule 17 (Parameters)


State 35

   15 TypeOrNull: Type .

    $default  reduce using rule 15 (TypeOrNull)


State 36

   14 FuncDeclaration: FUNC ID LPAR ParametersOrNull RPAR TypeOrNull . FuncBody

    LBRACE  shift, and go to state 38

    FuncBody  go to state 39


State 37

   18 ParametersList: ParametersList COMMA . ID Type

    ID  shift, and go to state 40


State 38

   22 FuncBody: LBRACE . VarsAndStatements RBRACE

    $default  reduce using rule 24 (VarsAndStatements)

    VarsAndStatements  go to state 41


State 39

   14 FuncDeclaration: FUNC ID LPAR ParametersOrNull RPAR TypeOrNull FuncBody .

    $default  reduce using rule 14 (FuncDeclaration)


State 40

   18 ParametersList: ParametersList COMMA ID . Type

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 42


State 41

   22 FuncBody: LBRACE VarsAndStatements . RBRACE
   23 VarsAndStatements: VarsAndStatements . VarsAndStatementsList SEMICOLON

    error   shift, and go to state 43
    ID      shift, and go to state 44
    LBRACE  shift, and go to state 45
    RBRACE  shift, and go to state 46
    RETURN  shift, and go to state 47
    PRINT   shift, and go to state 48
    VAR     shift, and go to state 8
    IF      shift, and go to state 49
    FOR     shift, and go to state 50

    SEMICOLON  reduce using rule 27 (VarsAndStatementsList)

    VarDeclaration         go to state 51
    VarsAndStatementsList  go to state 52
    Statement              go to state 53
    ParseArgs              go to state 54
    FuncInvocation         go to state 55


State 42

   18 ParametersList: ParametersList COMMA ID Type .

    $default  reduce using rule 18 (ParametersList)


State 43

   37 Statement: error .

    $default  reduce using rule 37 (Statement)


State 44

   28 Statement: ID . ASSIGN Expr
   42 ParseArgs: ID . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | ID . COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   44 FuncInvocation: ID . LPAR FuncInvocationList RPAR
   45               | ID . LPAR error RPAR

    COMMA   shift, and go to state 56
    ASSIGN  shift, and go to state 57
    LPAR    shift, and go to state 58


State 45

   29 Statement: LBRACE . StatementList1 RBRACE

    $default  reduce using rule 41 (StatementList1)

    StatementList1  go to state 59


State 46

   22 FuncBody: LBRACE VarsAndStatements RBRACE .

    $default  reduce using rule 22 (FuncBody)


State 47

   32 Statement: RETURN . ExprOrNull

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    $default  reduce using rule 73 (ExprOrNull)

    FuncInvocation  go to state 67
    Expr            go to state 68
    ExprOrNull      go to state 69


State 48

   35 Statement: PRINT . LPAR Expr RPAR
   36          | PRINT . LPAR STRLIT RPAR

    LPAR  shift, and go to state 70


State 49

   30 Statement: IF . Expr LBRACE StatementList1 RBRACE StatementList

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 71


State 50

   31 Statement: FOR . ExprOrNull LBRACE StatementList1 RBRACE

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    $default  reduce using rule 73 (ExprOrNull)

    FuncInvocation  go to state 67
    Expr            go to state 68
    ExprOrNull      go to state 72


State 51

   25 VarsAndStatementsList: VarDeclaration .

    $default  reduce using rule 25 (VarsAndStatementsList)


State 52

   23 VarsAndStatements: VarsAndStatements VarsAndStatementsList . SEMICOLON

    SEMICOLON  shift, and go to state 73


State 53

   26 VarsAndStatementsList: Statement .

    $default  reduce using rule 26 (VarsAndStatementsList)


State 54

   34 Statement: ParseArgs .

    $default  reduce using rule 34 (Statement)


State 55

   33 Statement: FuncInvocation .

    $default  reduce using rule 33 (Statement)


State 56

   42 ParseArgs: ID COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | ID COMMA . BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 74


State 57

   28 Statement: ID ASSIGN . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 75


State 58

   44 FuncInvocation: ID LPAR . FuncInvocationList RPAR
   45               | ID LPAR . error RPAR

    error    shift, and go to state 76
    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    RPAR  reduce using rule 47 (FuncInvocationList)

    FuncInvocation      go to state 67
    FuncInvocationList  go to state 77
    Expr                go to state 78


State 59

   29 Statement: LBRACE StatementList1 . RBRACE
   40 StatementList1: StatementList1 . Statement SEMICOLON

    error   shift, and go to state 43
    ID      shift, and go to state 44
    LBRACE  shift, and go to state 45
    RBRACE  shift, and go to state 79
    RETURN  shift, and go to state 47
    PRINT   shift, and go to state 48
    IF      shift, and go to state 49
    FOR     shift, and go to state 50

    Statement       go to state 80
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 60

   44 FuncInvocation: ID . LPAR FuncInvocationList RPAR
   45               | ID . LPAR error RPAR
   68 Expr: ID .

    LPAR  shift, and go to state 58

    $default  reduce using rule 68 (Expr)


State 61

   66 Expr: INTLIT .

    $default  reduce using rule 66 (Expr)


State 62

   67 Expr: REALLIT .

    $default  reduce using rule 67 (Expr)


State 63

   64 Expr: MINUS . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 81


State 64

   65 Expr: PLUS . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 82


State 65

   70 Expr: LPAR . Expr RPAR
   71     | LPAR . error RPAR

    error    shift, and go to state 83
    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 84


State 66

   63 Expr: NOT . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 85


State 67

   69 Expr: FuncInvocation .

    $default  reduce using rule 69 (Expr)


State 68

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   72 ExprOrNull: Expr .

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90
    EQ     shift, and go to state 91
    GE     shift, and go to state 92
    GT     shift, and go to state 93
    LE     shift, and go to state 94
    LT     shift, and go to state 95
    NE     shift, and go to state 96
    AND    shift, and go to state 97
    OR     shift, and go to state 98

    $default  reduce using rule 72 (ExprOrNull)


State 69

   32 Statement: RETURN ExprOrNull .

    $default  reduce using rule 32 (Statement)


State 70

   35 Statement: PRINT LPAR . Expr RPAR
   36          | PRINT LPAR . STRLIT RPAR

    ID       shift, and go to state 60
    STRLIT   shift, and go to state 99
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 100


State 71

   30 Statement: IF Expr . LBRACE StatementList1 RBRACE StatementList
   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR    shift, and go to state 86
    DIV     shift, and go to state 87
    MINUS   shift, and go to state 88
    PLUS    shift, and go to state 89
    MOD     shift, and go to state 90
    EQ      shift, and go to state 91
    GE      shift, and go to state 92
    GT      shift, and go to state 93
    LE      shift, and go to state 94
    LT      shift, and go to state 95
    NE      shift, and go to state 96
    LBRACE  shift, and go to state 101
    AND     shift, and go to state 97
    OR      shift, and go to state 98


State 72

   31 Statement: FOR ExprOrNull . LBRACE StatementList1 RBRACE

    LBRACE  shift, and go to state 102


State 73

   23 VarsAndStatements: VarsAndStatements VarsAndStatementsList SEMICOLON .

    $default  reduce using rule 23 (VarsAndStatements)


State 74

   42 ParseArgs: ID COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | ID COMMA BLANKID . ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 103


State 75

   28 Statement: ID ASSIGN Expr .
   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90
    EQ     shift, and go to state 91
    GE     shift, and go to state 92
    GT     shift, and go to state 93
    LE     shift, and go to state 94
    LT     shift, and go to state 95
    NE     shift, and go to state 96
    AND    shift, and go to state 97
    OR     shift, and go to state 98

    $default  reduce using rule 28 (Statement)


State 76

   45 FuncInvocation: ID LPAR error . RPAR

    RPAR  shift, and go to state 104


State 77

   44 FuncInvocation: ID LPAR FuncInvocationList . RPAR

    RPAR  shift, and go to state 105


State 78

   46 FuncInvocationList: Expr . CommaExpressionList
   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90
    EQ     shift, and go to state 91
    GE     shift, and go to state 92
    GT     shift, and go to state 93
    LE     shift, and go to state 94
    LT     shift, and go to state 95
    NE     shift, and go to state 96
    AND    shift, and go to state 97
    OR     shift, and go to state 98

    $default  reduce using rule 49 (CommaExpressionList)

    CommaExpressionList  go to state 106


State 79

   29 Statement: LBRACE StatementList1 RBRACE .

    $default  reduce using rule 29 (Statement)


State 80

   40 StatementList1: StatementList1 Statement . SEMICOLON

    SEMICOLON  shift, and go to state 107


State 81

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   64     | MINUS Expr .

    STAR  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 90

    $default  reduce using rule 64 (Expr)


State 82

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   65     | PLUS Expr .

    STAR  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 90

    $default  reduce using rule 65 (Expr)


State 83

   71 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 108


State 84

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   70     | LPAR Expr . RPAR

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90
    EQ     shift, and go to state 91
    GE     shift, and go to state 92
    GT     shift, and go to state 93
    LE     shift, and go to state 94
    LT     shift, and go to state 95
    NE     shift, and go to state 96
    RPAR   shift, and go to state 109
    AND    shift, and go to state 97
    OR     shift, and go to state 98


State 85

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   63     | NOT Expr .

    $default  reduce using rule 63 (Expr)


State 86

   61 Expr: Expr STAR . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 110


State 87

   62 Expr: Expr DIV . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 111


State 88

   60 Expr: Expr MINUS . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 112


State 89

   59 Expr: Expr PLUS . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 113


State 90

   50 Expr: Expr MOD . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 114


State 91

   53 Expr: Expr EQ . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 115


State 92

   56 Expr: Expr GE . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 116


State 93

   52 Expr: Expr GT . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 117


State 94

   55 Expr: Expr LE . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 118


State 95

   51 Expr: Expr LT . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 119


State 96

   54 Expr: Expr NE . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 120


State 97

   58 Expr: Expr AND . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 121


State 98

   57 Expr: Expr OR . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 122


State 99

   36 Statement: PRINT LPAR STRLIT . RPAR

    RPAR  shift, and go to state 123


State 100

   35 Statement: PRINT LPAR Expr . RPAR
   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90
    EQ     shift, and go to state 91
    GE     shift, and go to state 92
    GT     shift, and go to state 93
    LE     shift, and go to state 94
    LT     shift, and go to state 95
    NE     shift, and go to state 96
    RPAR   shift, and go to state 124
    AND    shift, and go to state 97
    OR     shift, and go to state 98


State 101

   30 Statement: IF Expr LBRACE . StatementList1 RBRACE StatementList

    $default  reduce using rule 41 (StatementList1)

    StatementList1  go to state 125


State 102

   31 Statement: FOR ExprOrNull LBRACE . StatementList1 RBRACE

    $default  reduce using rule 41 (StatementList1)

    StatementList1  go to state 126


State 103

   42 ParseArgs: ID COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | ID COMMA BLANKID ASSIGN . PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 127


State 104

   45 FuncInvocation: ID LPAR error RPAR .

    $default  reduce using rule 45 (FuncInvocation)


State 105

   44 FuncInvocation: ID LPAR FuncInvocationList RPAR .

    $default  reduce using rule 44 (FuncInvocation)


State 106

   46 FuncInvocationList: Expr CommaExpressionList .
   48 CommaExpressionList: CommaExpressionList . COMMA Expr

    COMMA  shift, and go to state 128

    $default  reduce using rule 46 (FuncInvocationList)


State 107

   40 StatementList1: StatementList1 Statement SEMICOLON .

    $default  reduce using rule 40 (StatementList1)


State 108

   71 Expr: LPAR error RPAR .

    $default  reduce using rule 71 (Expr)


State 109

   70 Expr: LPAR Expr RPAR .

    $default  reduce using rule 70 (Expr)


State 110

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   61     | Expr STAR Expr .
   62     | Expr . DIV Expr

    $default  reduce using rule 61 (Expr)


State 111

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr
   62     | Expr DIV Expr .

    $default  reduce using rule 62 (Expr)


State 112

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   60     | Expr MINUS Expr .
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 90

    $default  reduce using rule 60 (Expr)


State 113

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   59     | Expr PLUS Expr .
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 90

    $default  reduce using rule 59 (Expr)


State 114

   50 Expr: Expr . MOD Expr
   50     | Expr MOD Expr .
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    $default  reduce using rule 50 (Expr)


State 115

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   53     | Expr EQ Expr .
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90

    $default  reduce using rule 53 (Expr)


State 116

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   56     | Expr GE Expr .
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90

    $default  reduce using rule 56 (Expr)


State 117

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   52     | Expr GT Expr .
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90

    $default  reduce using rule 52 (Expr)


State 118

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   55     | Expr LE Expr .
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90

    $default  reduce using rule 55 (Expr)


State 119

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   51     | Expr LT Expr .
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90

    $default  reduce using rule 51 (Expr)


State 120

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   54     | Expr NE Expr .
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90

    $default  reduce using rule 54 (Expr)


State 121

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   58     | Expr AND Expr .
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90
    EQ     shift, and go to state 91
    GE     shift, and go to state 92
    GT     shift, and go to state 93
    LE     shift, and go to state 94
    LT     shift, and go to state 95
    NE     shift, and go to state 96

    $default  reduce using rule 58 (Expr)


State 122

   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   57     | Expr OR Expr .
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90
    EQ     shift, and go to state 91
    GE     shift, and go to state 92
    GT     shift, and go to state 93
    LE     shift, and go to state 94
    LT     shift, and go to state 95
    NE     shift, and go to state 96
    AND    shift, and go to state 97

    $default  reduce using rule 57 (Expr)


State 123

   36 Statement: PRINT LPAR STRLIT RPAR .

    $default  reduce using rule 36 (Statement)


State 124

   35 Statement: PRINT LPAR Expr RPAR .

    $default  reduce using rule 35 (Statement)


State 125

   30 Statement: IF Expr LBRACE StatementList1 . RBRACE StatementList
   40 StatementList1: StatementList1 . Statement SEMICOLON

    error   shift, and go to state 43
    ID      shift, and go to state 44
    LBRACE  shift, and go to state 45
    RBRACE  shift, and go to state 129
    RETURN  shift, and go to state 47
    PRINT   shift, and go to state 48
    IF      shift, and go to state 49
    FOR     shift, and go to state 50

    Statement       go to state 80
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 126

   31 Statement: FOR ExprOrNull LBRACE StatementList1 . RBRACE
   40 StatementList1: StatementList1 . Statement SEMICOLON

    error   shift, and go to state 43
    ID      shift, and go to state 44
    LBRACE  shift, and go to state 45
    RBRACE  shift, and go to state 130
    RETURN  shift, and go to state 47
    PRINT   shift, and go to state 48
    IF      shift, and go to state 49
    FOR     shift, and go to state 50

    Statement       go to state 80
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 127

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ Expr RSQ RPAR
   43          | ID COMMA BLANKID ASSIGN PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 131


State 128

   48 CommaExpressionList: CommaExpressionList COMMA . Expr

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 132


State 129

   30 Statement: IF Expr LBRACE StatementList1 RBRACE . StatementList

    ELSE  shift, and go to state 133

    $default  reduce using rule 39 (StatementList)

    StatementList  go to state 134


State 130

   31 Statement: FOR ExprOrNull LBRACE StatementList1 RBRACE .

    $default  reduce using rule 31 (Statement)


State 131

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ Expr RSQ RPAR
   43          | ID COMMA BLANKID ASSIGN PARSEINT LPAR . error RPAR

    error    shift, and go to state 135
    CMDARGS  shift, and go to state 136


State 132

   48 CommaExpressionList: CommaExpressionList COMMA Expr .
   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90
    EQ     shift, and go to state 91
    GE     shift, and go to state 92
    GT     shift, and go to state 93
    LE     shift, and go to state 94
    LT     shift, and go to state 95
    NE     shift, and go to state 96
    AND    shift, and go to state 97
    OR     shift, and go to state 98

    $default  reduce using rule 48 (CommaExpressionList)


State 133

   38 StatementList: ELSE . LBRACE StatementList1 RBRACE

    LBRACE  shift, and go to state 137


State 134

   30 Statement: IF Expr LBRACE StatementList1 RBRACE StatementList .

    $default  reduce using rule 30 (Statement)


State 135

   43 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 138


State 136

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 139


State 137

   38 StatementList: ELSE LBRACE . StatementList1 RBRACE

    $default  reduce using rule 41 (StatementList1)

    StatementList1  go to state 140


State 138

   43 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR .

    $default  reduce using rule 43 (ParseArgs)


State 139

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . Expr RSQ RPAR

    ID       shift, and go to state 60
    INTLIT   shift, and go to state 61
    REALLIT  shift, and go to state 62
    MINUS    shift, and go to state 63
    PLUS     shift, and go to state 64
    LPAR     shift, and go to state 65
    NOT      shift, and go to state 66

    FuncInvocation  go to state 67
    Expr            go to state 141


State 140

   38 StatementList: ELSE LBRACE StatementList1 . RBRACE
   40 StatementList1: StatementList1 . Statement SEMICOLON

    error   shift, and go to state 43
    ID      shift, and go to state 44
    LBRACE  shift, and go to state 45
    RBRACE  shift, and go to state 142
    RETURN  shift, and go to state 47
    PRINT   shift, and go to state 48
    IF      shift, and go to state 49
    FOR     shift, and go to state 50

    Statement       go to state 80
    ParseArgs       go to state 54
    FuncInvocation  go to state 55


State 141

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr . RSQ RPAR
   50 Expr: Expr . MOD Expr
   51     | Expr . LT Expr
   52     | Expr . GT Expr
   53     | Expr . EQ Expr
   54     | Expr . NE Expr
   55     | Expr . LE Expr
   56     | Expr . GE Expr
   57     | Expr . OR Expr
   58     | Expr . AND Expr
   59     | Expr . PLUS Expr
   60     | Expr . MINUS Expr
   61     | Expr . STAR Expr
   62     | Expr . DIV Expr

    STAR   shift, and go to state 86
    DIV    shift, and go to state 87
    MINUS  shift, and go to state 88
    PLUS   shift, and go to state 89
    MOD    shift, and go to state 90
    EQ     shift, and go to state 91
    GE     shift, and go to state 92
    GT     shift, and go to state 93
    LE     shift, and go to state 94
    LT     shift, and go to state 95
    NE     shift, and go to state 96
    RSQ    shift, and go to state 143
    AND    shift, and go to state 97
    OR     shift, and go to state 98


State 142

   38 StatementList: ELSE LBRACE StatementList1 RBRACE .

    $default  reduce using rule 38 (StatementList)


State 143

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 144


State 144

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR .

    $default  reduce using rule 42 (ParseArgs)
